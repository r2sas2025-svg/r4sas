{
  "hash": "e96c4853c052fc3fa43a31646df2419c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Creating ADaM: ADSL from SDTM-like Inputs\"\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'lubridate'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n\n\n:::\n:::\n\n\nWe simulate **minimal** SDTM-like `DM` and `EX` to illustrate ADSL creation.\nIf available, replace with your own `data/sdtm/*.sas7bdat`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# DM\ndm <- tibble::tibble(\n  STUDYID = \"XYZ123\",\n  USUBJID = sprintf(\"XYZ-%03d\", 1:10),\n  ARM = rep(c(\"Placebo\",\"Active\"), length.out=10),\n  AGE = c(55, 62, 47, 50, 71, 66, 45, 59, 53, 68),\n  SEX = rep(c(\"M\",\"F\"), length.out=10),\n  RANDDT = as.Date(\"2025-01-15\") + sample(0:20, 10, replace=TRUE)\n)\n\n# EX (first dose date)\nex <- tibble::tibble(\n  USUBJID = dm$USUBJID,\n  EXSTDTC = dm$RANDDT + sample(0:3, 10, replace=TRUE)\n)\n```\n:::\n\n\n## Build ADSL\n\n::: {.cell}\n\n```{.r .cell-code}\nadsl <- dm |>\n  left_join(ex, by=\"USUBJID\") |>\n  transmute(\n    STUDYID, USUBJID,\n    TRT01P = ARM,\n    TRT01PN = as.integer(factor(ARM, levels=c(\"Placebo\",\"Active\"))),\n    AGE, SEX,\n    RANDDT,\n    TRTSDT = EXSTDTC,\n    TRT01A = TRT01P,          # assume planned == actual for demo\n    TRT01AN = TRT01PN\n  )\nadsl\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 10\n   STUDYID USUBJID TRT01P  TRT01PN   AGE SEX   RANDDT     TRTSDT     TRT01A \n   <chr>   <chr>   <chr>     <int> <dbl> <chr> <date>     <date>     <chr>  \n 1 XYZ123  XYZ-001 Placebo       1    55 M     2025-01-18 2025-01-18 Placebo\n 2 XYZ123  XYZ-002 Active        2    62 F     2025-01-30 2025-01-30 Active \n 3 XYZ123  XYZ-003 Placebo       1    47 M     2025-01-15 2025-01-15 Placebo\n 4 XYZ123  XYZ-004 Active        2    50 F     2025-01-26 2025-01-28 Active \n 5 XYZ123  XYZ-005 Placebo       1    71 M     2025-01-31 2025-02-03 Placebo\n 6 XYZ123  XYZ-006 Active        2    66 F     2025-02-01 2025-02-03 Active \n 7 XYZ123  XYZ-007 Placebo       1    45 M     2025-02-04 2025-02-07 Placebo\n 8 XYZ123  XYZ-008 Active        2    59 F     2025-01-15 2025-01-16 Active \n 9 XYZ123  XYZ-009 Placebo       1    53 M     2025-01-19 2025-01-20 Placebo\n10 XYZ123  XYZ-010 Active        2    68 F     2025-01-19 2025-01-19 Active \n# ℹ 1 more variable: TRT01AN <int>\n```\n\n\n:::\n:::\n\n\n> Note: Real ADSL creation must follow **ADaM IG** (derive flags, dates, imputations, populations). This example is educational only.\n\n**Exercises**\n1. Add analysis populations (e.g., `SAFFL`, `FASFL`) based on simple rules.\n2. Derive `AGEGR1` as `<65 / ≥65` and use ordered factor.\n3. Add a treatment end date `TRTEDT` and compute treatment duration.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}