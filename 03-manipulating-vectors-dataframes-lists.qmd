---
title: "Manipulating Vectors, Data Frames, and Lists"
---

```{r}
library(dplyr)
library(tidyr)
```

# Vectors: Indexing & Vectorized Ops
```{r}
v <- 1:10
v[v %% 2 == 0]
v * 2
```

# Data Frames with dplyr
```{r}
df <- tibble::tibble(
  id = 1:6,
  grp = c("A","A","B","B","C","C"),
  age = c(35,44,53,51,29,40),
  wt  = c(70, 85, 92, 88, 60, 75)
)

df |> 
  dplyr::group_by(grp) |>
  dplyr::summarise(
    n = dplyr::n(),
    mean_age = mean(age),
    sd_wt = sd(wt)
  )
```

## `mutate()` + `across()`
```{r}
df |>
  mutate(
    bmi = wt / (1.70^2),
    across(c(age, wt), ~ .x - mean(.x), .names = "{.col}_centered")
  )
```

## Row-wise with `c_across()`
```{r}
row_sums <- df |>
  rowwise() |>
  mutate(sum_age_wt = sum(c_across(c(age, wt)))) |>
  ungroup()
row_sums
```

# Lists: `lapply`, purrr
```{r}
lst <- list(a=1:3, b=10:12)
lapply(lst, mean)
```

# Exercises
1. Using `across()`, standardize (`(x-mean)/sd`) numeric columns.
2. Create a row-wise mean of `age` and `wt`.
3. Split `df` by `grp` and compute group means with `lapply` or `purrr::map`.
