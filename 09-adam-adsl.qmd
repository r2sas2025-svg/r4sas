---
title: "Creating ADaM: ADSL from SDTM-like Inputs"
---

```{r}
library(dplyr)
library(tidyr)
library(lubridate)
```

We simulate **minimal** SDTM-like `DM` and `EX` to illustrate ADSL creation.
If available, replace with your own `data/sdtm/*.sas7bdat`.

```{r}
# DM
dm <- tibble::tibble(
  STUDYID = "XYZ123",
  USUBJID = sprintf("XYZ-%03d", 1:10),
  ARM = rep(c("Placebo","Active"), length.out=10),
  AGE = c(55, 62, 47, 50, 71, 66, 45, 59, 53, 68),
  SEX = rep(c("M","F"), length.out=10),
  RANDDT = as.Date("2025-01-15") + sample(0:20, 10, replace=TRUE)
)

# EX (first dose date)
ex <- tibble::tibble(
  USUBJID = dm$USUBJID,
  EXSTDTC = dm$RANDDT + sample(0:3, 10, replace=TRUE)
)
```

## Build ADSL
```{r}
adsl <- dm |>
  left_join(ex, by="USUBJID") |>
  transmute(
    STUDYID, USUBJID,
    TRT01P = ARM,
    TRT01PN = as.integer(factor(ARM, levels=c("Placebo","Active"))),
    AGE, SEX,
    RANDDT,
    TRTSDT = EXSTDTC,
    TRT01A = TRT01P,          # assume planned == actual for demo
    TRT01AN = TRT01PN
  )
adsl
```

> Note: Real ADSL creation must follow **ADaM IG** (derive flags, dates, imputations, populations). This example is educational only.

**Exercises**
1. Add analysis populations (e.g., `SAFFL`, `FASFL`) based on simple rules.
2. Derive `AGEGR1` as `<65 / â‰¥65` and use ordered factor.
3. Add a treatment end date `TRTEDT` and compute treatment duration.
